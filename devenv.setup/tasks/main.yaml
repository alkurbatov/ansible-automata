---

# FIXME (alkurbatov): Adapter name depends on particular env.
# Need to pick the name somehow.
  - name: Determine whether IPv6 support enabled
    command: /usr/bin/cat /proc/sys/net/ipv6/conf/enp1s0/disable_ipv6
    register: ipv6_disabled
    changed_when: false

  - name: Disable IPv6 support
    command: /usr/bin/nmcli connection modify enp1s0 ipv6.method disabled
    when: ipv6_disabled.stdout == '0'
    notify:
      - Restart NetworkManager

  - name: Disable selinux
    selinux:
      state: disabled
    register: disable_selinux

  - name: Remove useless packages
    dnf:
     state: absent
     name: [
       NetworkManager-wifi,
       abrt,
       abrt-libs,
       bluez,
       bluez-libs,
       cockpit,
       cockpit-bridge,
       cockpit-dashboard,
       cockpit-networkmanager,
       cockpit-packagekit,
       cockpit-selinux,
       cockpit-system,
       cockpit-ws,
       cups-libs,
       ipw2100-firmware,
       ipw2200-firmware,
       iw,
       iwd,
       iwl100-firmware,
       iwl1000-firmware,
       iwl105-firmware,
       iwl135-firmware,
       iwl2000-firmware,
       iwl2030-firmware,
       iwl3160-firmware,
       iwl3945-firmware,
       iwl4965-firmware,
       iwl5000-firmware,
       iwl5150-firmware,
       iwl6000-firmware,
       iwl6000g2a-firmware,
       iwl6000g2b-firmware,
       iwl6050-firmware,
       iwl7260-firmware,
       nano,
       nfs-utils,
       ntfs-3g,
       wireless-regdb,
       wireless-tools,
       wpa_supplicant,
     ]

  - name: Update all packages
    dnf:
      name: "*"
      state: latest
      update_cache: yes
    register: update_packages

  - name: Reboot node
    reboot:
    when: disable_selinux.changed or update_packages.changed

  - name: Install additional software for work
    dnf:
      state: present
      name: [
        curl,
        dnf-plugin-system-upgrade,
        fzf,
        gcc-c++,
        git,
        gpgme,
        htop,
        iotop,
        iproute,
        libXScrnSaver,
        lsof,
        make,
        mc,
        neovim,
        nodejs,
        npm,
        patch,
        rpmconf,
        rsync,
        screen,
        socat,
        strace,
        the_silver_searcher,
        tmux,
        util-linux-user,
        wget,
        xorg-x11-drv-qxl,
        xorg-x11-fonts-100dpi,
        xorg-x11-fonts-75dpi,
        xorg-x11-server-Xorg,
        zsh,
      ]

  - name: Create the work folders
    file:
      path: "/root/work/{{item}}"
      state: directory
      mode: '0700'
    loop:
      - bin
      - etc
      - pkg
      - src
      - tmp

  - name: Copy developer keys
    copy:
      src: "~/.ssh/{{item}}"
      dest: /root/.ssh
      owner: root
      mode: '0600'
    loop:
      - acronis
      - acronis.pub
      - github
      - github.pub

  - name: Copy ssh config
    copy:
      src: devenv.setup/files/config
      dest: /root/.ssh
      owner: root
      mode: '0600'

  - name: Copy zsh configuration files
    copy:
      src: "~/work/src/github.com/alkurbatov/dotfiles/{{item}}"
      dest: /root
      owner: root
      mode: '0644'
    loop:
      - .zshrc
      - .zshenv
      - .zsh_tools
      - .zsh_aliases

  - name: Install zsh-you-should-use plugin
    git:
      repo: https://github.com/MichaelAquilina/zsh-you-should-use.git
      dest: ~/.zsh/zsh-you-should-use
      version: 1.7.3

  - name: Install zsh-autosuggestions plugin
    git:
      repo: https://github.com/zsh-users/zsh-autosuggestions.git
      dest: ~/.zsh/zsh-autosuggestions
      version: v0.6.4

  - name: Make zsh the default shell
    shell: chsh -s $(which zsh)

  - name: Copy git config
    copy:
      src: ~/work/src/github.com/alkurbatov/dotfiles/git/.gitconfig
      dest: /root
      owner: root
      mode: '0600'

  - name: Copy global gitignore
    copy:
      src: ~/work/src/github.com/alkurbatov/dotfiles/git/.gitignore
      dest: /root
      owner: root
      mode: '0600'

  - name: Create a .gnupg folder
    file:
      path: ~/.gnupg
      state: directory
      mode: '0600'

  - name: Copy gpg config in order to be able to sign commits inside virtual machines
    copy:
      src: devenv.setup/files/gpg.conf
      dest: /root/.gnupg
      owner: root
      mode: '0600'

  - name: Create script for unattended generation of GPG keys
    copy:
      src: devenv.setup/files/gen-key-script
      dest: /root/work/tmp
      owner: root
      mode: '0600'

  - name: Generate new GPG key
    command: /usr/bin/gpg --batch --gen-key /root/work/tmp/gen-key-script
    args:
      creates: /root/.gnupg/pubring.kbx

  - name: Copy tmux config
    copy:
      src: ~/work/src/github.com/alkurbatov/dotfiles/.tmux.conf
      dest: /root
      owner: root
      mode: '0600'
